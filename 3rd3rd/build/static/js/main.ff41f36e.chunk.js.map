{"version":3,"sources":["shared/firebase.js","redux/modules/user.js","shared/Cookie.js","redux/modules/image.js","redux/modules/post.js","redux/modules/comment.js","redux/modules/like.js","redux/configureStore.js","elements/Grid.js","elements/Image.js","elements/Text.js","elements/Input.js","elements/Button.js","elements/Spinner.js","components/LikeButton.js","components/Post.js","shared/InfinityScroll.js","pages/PostList.js","shared/common.js","pages/Login.js","pages/Signup.js","shared/Upload.js","pages/PostWrite.js","components/CommentList.js","components/CommentWrite.js","shared/Permit.js","pages/PostDetail.js","shared/Search.js","components/Card.js","pages/Notification.js","components/NotiBadge.js","components/Header.js","pages/Caution.js","shared/App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","auth","firestore","storage","realtime","database","LOG_OUT","GET_USER","SET_USER","logOut","createAction","user","setUser","handleActions","state","action","produce","draft","name","value","exp","date","Date","setTime","getTime","document","cookie","toUTCString","setCookie","payload","is_login","console","log","deleteCookie","actionCreators","id","pwd","user_name","dispatch","getState","history","createUserWithEmailAndPassword","then","currentUser","updateProfile","displayName","user_profile","uid","push","catch","error","errorCode","code","errorMessage","message","setPersistence","Auth","Persistence","SESSION","res","signInWithEmailAndPassword","onAuthStateChanged","email","signOut","replace","UPLOADING","UPLOAD_IMAGE","SET_PREVIEW","uploading","uploadImage","image_url","setPreview","preview","uploadImageFB","image","ref","put","snapshot","getDownloadURL","url","SET_POST","ADD_POST","EDIT_POST","LOADING","DELETE_POST","post_db","collection","setPost","post_list","paging","addPost","post","editPost","post_id","loading","is_loading","deletePost","initialPost","contents","comment_cnt","insert_dt","moment","format","like_cnt","layout","list","reduce","acc","cur","findIndex","a","unshift","idx","p","filter","l","start","next","size","getPostFB","_paging","query","orderBy","startAt","limit","get","docs","length","forEach","doc","_post","data","Object","keys","indexOf","user_info","pop","addPostFB","postDB","_user","user_id","_image","putString","add","imageActions","err","window","alert","editPostFB","_post_idx","update","getOnePostFB","deletePostFB","delete","SET_COMMENT","ADD_COMMENT","setComment","comment_list","addComment","comment","where","commentDB","find","increment","FieldValue","postActions","parseInt","set","read","SET_LIKE","ADD_LIKE","CANCEL_LIKE","setLike","user_list","addLike","cancelLike","likeDB","like","updatePost","decrement","createBrowserHistory","rootReducer","combineReducers","User","Post","Image","Comment","router","connectRouter","middlewares","thunk","withExtraArgument","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","Grid","props","is_flex","width","margin","padding","bg","children","center","_onClick","styles","maxWidth","Fragment","GridBox","onClick","defaultProps","chidren","styled","div","shape","src","ImageCircle","BigSquareImage","AspectOutter","AspectInner","ImageDefault","img","half","Text","bold","color","P","Input","label","placeholder","_onChange","type","multiLine","is_submit","onSubmit","ElTextarea","rows","onChange","ElInput","onKeyPress","e","key","textarea","input","Button","text","is_float","FloatButton","ElButton","button","Spinner","is_dim","SpinnerWrap","SpinnerSvg","LikeButton","useDispatch","like_list","useSelector","_session_key","is_session","sessionStorage","getItem","React","useEffect","includes","setToggle","useState","toggle","likeActions","style","is_me","event","stopPropagation","InfinityScroll","callNext","is_next","_handleScroll","_","throttle","innerHeight","body","scrollHeight","documentElement","scrollTop","handleScroll","useCallback","addEventListener","removeEventListener","PostList","map","emailCheck","test","Login","setId","setPwd","login","userActions","target","Signup","pwd_check","setPwdCheck","setUserName","Upload","is_uploading","fileInput","useRef","files","current","reader","FileReader","file","readAsDataURL","onloadend","result","disabled","PostWrite","match","params","is_edit","setLayout","setInput","goBack","is_checked","htmlFor","_disabled","CommentList","commentActions","c","CommentItem","CommentWrite","comment_text","setCommentText","write","Permit","PostDetail","post_idx","Search","setText","debounce","keyPress","Card","Notification","noti","setNoti","orderByChild","once","exists","_data","val","_noti_list","reverse","s","n","NotiBadge","is_read","setIsRead","notiDB","on","off","Badge","variant","invisible","Header","Caution","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ff41f36e.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nimport \"firebase/database\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC0zTbrjRdz0dS8GUvQvyRfc6WxIavlhWU\",\n  authDomain: \"image-community-6dec8.firebaseapp.com\",\n  projectId: \"image-community-6dec8\",\n  storageBucket: \"image-community-6dec8.appspot.com\",\n  messagingSenderId: \"1032440629457\",\n  appId: \"1:1032440629457:web:40f263baac7ff369afddf0\",\n  measurementId: \"G-NQPT8X7G4P\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst apiKey = firebaseConfig.apiKey;\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst storage = firebase.storage();\nconst realtime = firebase.database();\nexport{auth, apiKey, firestore, storage, realtime};","import { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\n\nimport { setCookie, getCookie, deleteCookie } from \"../../shared/Cookie\";\n\nimport { auth } from \"../../shared/firebase\";\nimport firebase from \"firebase/app\";\n\n// actions\nconst LOG_OUT = \"LOG_OUT\";\nconst GET_USER = \"GET_USER\";\nconst SET_USER = \"SET_USER\";\n\n// action creators\nconst logOut = createAction(LOG_OUT, (user) => ({ user }));\nconst getUser = createAction(GET_USER, (user) => ({ user }));\nconst setUser = createAction(SET_USER, (user) => ({ user }));\n\n// initialState\nconst initialState = {\n  user: null,\n  is_login: false,\n};\n\n// middleware actions\nconst loginFB = (id, pwd) => {\n  return function (dispatch, getState, { history }) {\n    auth.setPersistence(firebase.auth.Auth.Persistence.SESSION).then((res) => {\n      auth\n        .signInWithEmailAndPassword(id, pwd)\n        .then((user) => {\n          console.log(user);\n\n          dispatch(\n            setUser({\n              user_name: user.user.displayName,\n              id: id,\n              user_profile: \"\",\n              uid: user.user.uid,\n            })\n          );\n\n          history.push(\"/\");\n        })\n        .catch((error) => {\n          var errorCode = error.code;\n          var errorMessage = error.message;\n\n          console.log(errorCode, errorMessage);\n        });\n    });\n  };\n};\n\nconst signupFB = (id, pwd, user_name) => {\n  return function (dispatch, getState, { history }) {\n    auth\n      .createUserWithEmailAndPassword(id, pwd)\n      .then((user) => {\n        console.log(user);\n\n        auth.currentUser\n          .updateProfile({\n            displayName: user_name,\n          })\n          .then(() => {\n            dispatch(\n              setUser({\n                user_name: user_name,\n                id: id,\n                user_profile: \"\",\n                uid: user.user.uid,\n              })\n            );\n            history.push(\"/\");\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n\n        // Signed in\n        // ...\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n\n        console.log(errorCode, errorMessage);\n        // ..\n      });\n  };\n};\n\nconst loginCheckFB = () => {\n  return function (dispatch, getState, {history}){\n    auth.onAuthStateChanged((user) => {\n      if(user){\n        dispatch(\n          setUser({\n            user_name: user.displayName,\n            user_profile: \"\",\n            id: user.email,\n            uid: user.uid,\n          })\n        );\n      }else{\n        dispatch(logOut());\n      }\n    })\n  }\n}\n\nconst logoutFB = () => {\n  return function (dispatch, getState, {history}) {\n    auth.signOut().then(() => {\n      dispatch(logOut());\n      history.replace('/');\n    })\n  }\n}\n\n// reducer\nexport default handleActions(\n  {\n    [SET_USER]: (state, action) =>\n      produce(state, (draft) => {\n        setCookie(\"is_login\", \"success\");\n        draft.user = action.payload.user;\n        draft.is_login = true;\n      }),\n    [LOG_OUT]: (state, action) =>\n      produce(state, (draft) => {\n        deleteCookie(\"is_login\");\n        draft.user = null;\n        draft.is_login = false;\n      }),\n    [GET_USER]: (state, action) => produce(state, (draft) => {}),\n  },\n  initialState\n);\n\n// action creator export\nconst actionCreators = {\n  logOut,\n  getUser,\n  signupFB,\n  loginFB,\n  loginCheckFB,\n  logoutFB,\n};\n\nexport { actionCreators };\n","const getCookie = (name) => {\n  let value = \"; \"+document.cookie;\n\n  let parts = value.split(`; ${name}=`);\n\n  if (parts.length === 2) {\n    return parts.pop().split(\";\").shift();\n  }\n};\n\nconst setCookie = (name, value, exp = 5) => {\n  let date = new Date();\n  date.setTime(date.getTime() + exp * 24 * 60 * 60 * 1000);\n\n  document.cookie = `${name}=${value}; expires=${date.toUTCString()}`;\n};\n\nconst deleteCookie = (name) => {\n    let date = new Date(\"2020-01-01\").toUTCString();\n\n    console.log(date);\n\n    document.cookie = name+\"=; expires=\"+date;\n\n};\n\nexport { getCookie, setCookie, deleteCookie };\n","import {createAction, handleActions} from \"redux-actions\";\nimport produce from \"immer\";\n\nimport {storage} from \"../../shared/firebase\";\n\nconst UPLOADING = \"UPLOADING\";\nconst UPLOAD_IMAGE = \"UPLOAD_IMAGE\";\nconst SET_PREVIEW = \"SET_PREVIEW\";\n\nconst uploading = createAction(UPLOADING, (uploading) => ({uploading}));\nconst uploadImage = createAction(UPLOAD_IMAGE, (image_url) => ({image_url}));\nconst setPreview = createAction(SET_PREVIEW, (preview) => ({preview}));\n\nconst initialState = {\n    image_url: '',\n    uploading: false,\n    preview: null,\n}\n\nconst uploadImageFB = (image) => {\n    return function(dispatch, getState, {history}){\n        \n        dispatch(uploading(true));\n\n         const _upload = storage.ref(`images/${image.name}`).put(image);\n\n         _upload.then((snapshot) => {\n           console.log(snapshot);\n            \n           snapshot.ref.getDownloadURL().then((url) => {\n               dispatch(uploadImage(url));\n             console.log(url);\n           });\n         });\n\n    }\n}\n\nexport default handleActions({\n    [UPLOAD_IMAGE]: (state, action) => produce(state, (draft) => {\n        draft.image_url = action.payload.image_url;\n        draft.uploading = false;\n    }),\n    [UPLOADING]: (state, action) => produce(state, (draft) => {\n        draft.uploading = action.payload.uploading;\n    }),\n    [SET_PREVIEW]: (state, action) => produce(state, (draft) => {\n      draft.preview = action.payload.preview;\n    })\n}, initialState);\n\nconst actionCreators = {\n  uploadImage,\n  uploadImageFB,\n  setPreview,\n};\n\nexport {actionCreators};\n\n","import { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport { firestore, storage } from \"../../shared/firebase\";\nimport \"moment\";\nimport moment from \"moment\";\n\nimport { actionCreators as imageActions } from \"./image\";\n\nconst SET_POST = \"SET_POST\";\nconst ADD_POST = \"ADD_POST\";\nconst EDIT_POST = \"EDIT_POST\";\nconst LOADING = \"LOADING\";\nconst DELETE_POST = \"DELETE_POST\"\n\nconst post_db = firestore.collection(\"post\");\n\nconst setPost = createAction(SET_POST, (post_list, paging) => ({ post_list, paging }));\nconst addPost = createAction(ADD_POST, (post) => ({ post }));\nconst editPost = createAction(EDIT_POST, (post_id, post) => ({\n  post_id,\n  post,\n}));\nconst loading = createAction(LOADING, (is_loading) => ({ is_loading }));\nconst deletePost = createAction(DELETE_POST, (post_id) => ({post_id}))\n\nconst initialState = {\n  list: [],\n  paging: { start: null, next: null, size: 3 },\n  is_loading: false,\n};\n\nconst initialPost = {\n  // id: 0,\n  // user_info: {\n  //   user_name: \"mean0\",\n  //   user_profile: \"https://mean0images.s3.ap-northeast-2.amazonaws.com/4.jpeg\",\n  // },\n  image_url: \"https://pds.joongang.co.kr/news/component/htmlphoto_mmdata/202111/07/762ce144-d666-4790-8609-c78416910e88.jpg\",\n  contents: \"\",\n  comment_cnt: 0,\n  insert_dt: moment().format(\"YYYY-MM-DD hh:mm:ss\"),\n  like_cnt: 0,\n  layout: \"bottom\",\n};\n\nconst editPostFB = (post_id = null, post = {}) => {\n  return function (dispatch, getState, { history }) {\n    if (!post_id) {\n      console.log(\"게시물 정보가 없어요!\");\n      return;\n    }\n\n    const _image = getState().image.preview;\n\n    const _post_idx = getState().post.list.findIndex((p) => p.id === post_id);\n    const _post = getState().post.list[_post_idx];\n\n    console.log(_post);\n\n    const postDB = firestore.collection(\"post\");\n\n    if (_image === _post.image_url) {\n      postDB\n        .doc(post_id)\n        .update(post)\n        .then((doc) => {\n          dispatch(editPost(post_id, { ...post }));\n          history.replace(\"/\");\n        });\n\n      return;\n    } else {\n      const user_id = getState().user.user.uid;\n      const _upload = storage\n        .ref(`images/${user_id}_${new Date().getTime()}`)\n        .putString(_image, \"data_url\");\n\n      _upload.then((snapshot) => {\n        snapshot.ref\n          .getDownloadURL()\n          .then((url) => {\n            console.log(url);\n\n            return url;\n          })\n          .then((url) => {\n            postDB\n              .doc(post_id)\n              .update({ ...post, image_url: url })\n              .then((doc) => {\n                dispatch(editPost(post_id, { ...post, image_url: url }));\n                history.replace(\"/\");\n              });\n          })\n          .catch((err) => {\n            window.alert(\"앗! 이미지 업로드에 문제가 있어요!\");\n            console.log(\"앗! 이미지 업로드에 문제가 있어요!\", err);\n          });\n      });\n    }\n  };\n};\n\nconst addPostFB = (contents = \"\", layout) => {\n  return function (dispatch, getState, { history }) {\n    const postDB = firestore.collection(\"post\");\n\n    const _user = getState().user.user;\n\n    const user_info = {\n      user_name: _user.user_name,\n      user_id: _user.uid,\n      user_profile: _user.user_profile,\n    };\n\n    const _post = {\n      ...initialPost,\n      contents: contents,\n      insert_dt: moment().format(\"YYYY-MM-DD hh:mm:ss\"),\n      layout: layout\n    };\n\n    const _image = getState().image.preview;\n\n    console.log(_image);\n    console.log(typeof _image);\n\n    const _upload = storage\n      .ref(`images/${user_info.user_id}_${new Date().getTime()}`)\n      .putString(_image, \"data_url\");\n\n    _upload.then((snapshot) => {\n      snapshot.ref\n        .getDownloadURL()\n        .then((url) => {\n          console.log(url);\n\n          return url;\n        })\n        .then((url) => {\n          postDB\n            .add({ ...user_info, ..._post, image_url: url })\n            .then((doc) => {\n              let post = { user_info, ..._post, id: doc.id, image_url: url };\n              dispatch(addPost(post));\n              history.replace(\"/\");\n\n              dispatch(imageActions.setPreview(null));\n            })\n            .catch((err) => {\n              window.alert(\"앗! 포스트 작성에 문제가 있어요!\");\n              console.log(\"post 작성에 실패했어요!\", err);\n            });\n        })\n        .catch((err) => {\n          window.alert(\"앗! 이미지 업로드에 문제가 있어요!\");\n          console.log(\"앗! 이미지 업로드에 문제가 있어요!\", err);\n        });\n    });\n  };\n};\n\nconst getPostFB = (start = null, size = 3) => {\n  return function (dispatch, getState, { history }) {\n\n    let _paging = getState().post.paging;\n\n    if(_paging.start && !_paging.next){\n      return;\n    }\n\n    dispatch(loading(true));\n    const postDB = firestore.collection(\"post\");\n\n    let query = postDB.orderBy(\"insert_dt\", \"desc\");\n\n    if(start){\n      query = query.startAt(start);\n    }\n\n\n    query\n      .limit(size + 1)\n      .get()\n      .then((docs) => {\n        let post_list = [];\n\n        let paging = {\n          start: docs.docs[0],\n          next: docs.docs.length === size+1? docs.docs[docs.docs.length -1] : null,\n          size: size,\n        }\n\n        docs.forEach((doc) => {\n          let _post = doc.data();\n\n          // ['commenct_cnt', 'contents', ..]\n          let post = Object.keys(_post).reduce(\n            (acc, cur) => {\n              if (cur.indexOf(\"user_\") !== -1) {\n                return {\n                  ...acc,\n                  user_info: { ...acc.user_info, [cur]: _post[cur] },\n                };\n              }\n              return { ...acc, [cur]: _post[cur] };\n            },\n            { id: doc.id, user_info: {} }\n          );\n\n          post_list.push(post);\n        });\n\n        post_list.pop();\n\n        console.log(post_list);\n\n        dispatch(setPost(post_list, paging));\n      });\n  };\n};\n\nconst getOnePostFB = (id) => {\n  return function(dispatch, getState, {history}){\n    const postDB = firestore.collection(\"post\");\n    postDB\n      .doc(id)\n      .get()\n      .then((doc) => {\n        console.log(doc);\n        console.log(doc.data());\n\n        let _post = doc.data();\n        let post = Object.keys(_post).reduce(\n          (acc, cur) => {\n            if (cur.indexOf(\"user_\") !== -1) {\n              return {\n                ...acc,\n                user_info: { ...acc.user_info, [cur]: _post[cur] },\n              };\n            }\n            return { ...acc, [cur]: _post[cur] };\n          },\n          { id: doc.id, user_info: {} }\n        );\n\n        dispatch(setPost([post]));\n      });\n  }\n}\n\nconst deletePostFB = (post_id) => {\n  return function (dispatch, getState, {history}) {\n    post_db.doc(post_id).delete().then(() => {           \n      history.replace('/')\n      dispatch(deletePost(post_id));\n    })\n    .catch((err) => {\n      \n      console.log(err);\n    })\n    \n  }\n}\n\nexport default handleActions(\n  {\n    [SET_POST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.list.push(...action.payload.post_list);\n\n        draft.list = draft.list.reduce((acc, cur) => {\n          if(acc.findIndex(a => a.id === cur.id) === -1){\n            return [...acc, cur];\n          }else{\n            acc[acc.findIndex((a) => a.id === cur.id)] = cur;\n            return acc;\n          }\n        }, []);\n\n\n        if(action.payload.paging){\n          draft.paging = action.payload.paging;\n        }\n        \n        draft.is_loading = false;\n      }),\n\n    [ADD_POST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.list.unshift(action.payload.post);\n      }),\n    [EDIT_POST]: (state, action) =>\n      produce(state, (draft) => {\n        let idx = draft.list.findIndex((p) => p.id === action.payload.post_id);\n\n        draft.list[idx] = { ...draft.list[idx], ...action.payload.post };\n      }),\n      [LOADING]: (state, action) => produce(state, (draft) => {\n        draft.is_loading = action.payload.is_loading;\n      }),\n    [DELETE_POST]: (state, action) => produce(state, (draft) => {\n        draft.list = draft.list.filter((l) => l.id !== action.payload.post_id);      \n      })    \n  },\n  initialState\n);\n\nconst actionCreators = {\n  setPost,\n  addPost,\n  editPost,\n  getPostFB,\n  addPostFB,\n  editPostFB,\n  getOnePostFB,\n  deletePostFB,\n};\n\nexport { actionCreators };\n","import { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport { firestore, realtime } from \"../../shared/firebase\";\nimport \"moment\";\nimport moment from \"moment\";\n\nimport firebase from \"firebase/app\";\n\nimport { actionCreators as postActions } from \"./post\";\n\nconst SET_COMMENT = \"SET_COMMENT\";\nconst ADD_COMMENT = \"ADD_COMMENT\";\n\nconst LOADING = \"LOADING\";\n\nconst setComment = createAction(SET_COMMENT, (post_id, comment_list) => ({\n  post_id,\n  comment_list,\n}));\nconst addComment = createAction(ADD_COMMENT, (post_id, comment) => ({\n  post_id,\n  comment,\n}));\n\nconst loading = createAction(LOADING, (is_loading) => ({ is_loading }));\n\nconst initialState = {\n  list: {},\n  is_loading: false,\n};\n\nconst addCommentFB = (post_id, contents) => {\n  return function (dispatch, getState, { history }) {\n    const commentDB = firestore.collection(\"comment\");\n    const user_info = getState().user.user;\n\n    let comment = {\n      post_id: post_id,\n      user_id: user_info.uid,\n      user_name: user_info.user_name,\n      user_profile: user_info.user_profile,\n      contents: contents,\n      insert_dt: moment().format(\"YYYY-MM-DD hh:mm:ss\"),\n    }; \n\n    commentDB.add(comment).then((doc) => {\n      const postDB = firestore.collection(\"post\");\n\n      const post = getState().post.list.find((l) => l.id === post_id);\n\n      const increment = firebase.firestore.FieldValue.increment(1);\n\n      comment = {...comment, id: doc.id};\n      \n      postDB\n        .doc(post_id)\n        .update({ comment_cnt: increment })\n        .then((_post) => {\n          \n          dispatch(addComment(post_id, comment));\n\n          if (post) {\n            dispatch(\n              postActions.editPost(post_id, {\n                comment_cnt: parseInt(post.comment_cnt) + 1,\n              })\n            );\n\n            const _noti_item = realtime.ref(`noti/${post.user_info.user_id}/list`).push();\n\n            _noti_item.set({\n              post_id: post.id,\n              user_name: comment.user_name,\n              image_url: post.image_url,\n              insert_dt: comment.insert_dt\n            }, (err) => {\n              if(err){\n                console.log(\"알림 저장에 실패했어요!\");\n              }else{\n                const notiDB = realtime.ref(`noti/${post.user_info.user_id}`);\n\n                notiDB.update({read: false});\n              }\n            });\n\n          }\n        });\n    });\n  };\n};\n\nconst getCommentFB = (post_id = null) => {\n  return function (dispatch, getState, { history }) {\n    if (!post_id) {\n      return;\n    }\n\n    const commentDB = firestore.collection(\"comment\");\n\n    commentDB\n      .where(\"post_id\", \"==\", post_id)\n      .orderBy(\"insert_dt\", \"desc\")\n      .get()\n      .then((docs) => {\n        let list = [];\n\n        docs.forEach((doc) => {\n          list.push({ ...doc.data(), id: doc.id });\n        });\n\n        dispatch(setComment(post_id, list));\n      })\n      .catch((err) => {\n        console.log(\"댓글 정보를 가져올 수가 없네요!\", err);\n      });\n  };\n};\n\nexport default handleActions(\n  {\n    [SET_COMMENT]: (state, action) =>\n      produce(state, (draft) => {\n        draft.list[action.payload.post_id] = action.payload.comment_list;\n      }),\n    [ADD_COMMENT]: (state, action) => produce(state, (draft) => {\n      draft.list[action.payload.post_id].unshift(action.payload.comment);\n    }),\n    [LOADING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.is_loading = action.payload.is_loading;\n      }),\n  },\n  initialState\n);\n\nconst actionCreators = {\n  getCommentFB,\n  addCommentFB,\n  setComment,\n  addComment,\n};\n\nexport { actionCreators };\n","import { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport { firestore, realtime } from \"../../shared/firebase\";\nimport moment from \"moment\";\n\nimport firebase from \"firebase/app\";\n\nimport { actionCreators as postActions } from \"./post\";\n\nconst SET_LIKE = \"SET_LIKE\";\nconst ADD_LIKE = \"ADD_LIKE\";\nconst CANCEL_LIKE = \"CANCEL_LIKE\";\n\nconst setLike = createAction(SET_LIKE, (post_id, user_list) => ({\n  post_id,\n  user_list,\n}));\nconst addLike = createAction(ADD_LIKE, (post_id, user_id) => ({\n  post_id,\n  user_id,\n}));\n\nconst cancelLike = createAction(CANCEL_LIKE, (post_id, user_id) => ({\n  post_id,\n  user_id,\n}));\n\nconst initialState = {\n  list: {},\n};\n\nconst getLikeFB = (post_id) => {\n  return function (dispatch, getState, { history }) {\n    if (!post_id) {\n      return;\n    }\n\n    const likeDB = firestore.collection(\"like\");\n\n    likeDB\n      .where(\"post_id\", \"==\", post_id)\n      .get()\n      .then((docs) => {\n        let list = [];\n        docs.forEach((doc) => {\n          list.push(doc.data().user_id);\n        });\n        console.log(list);\n\n        dispatch(setLike(post_id, list));\n      })\n      .catch((error) => {\n        console.log(\"좋아요 정보를 가져올 수가 없어요!\", error);\n      });\n  };\n};\n\nconst addLikeFB = (post_id) => {\n  return function (dispatch, getState, { history }) {\n    const likeDB = firestore.collection(\"like\");\n    const user_info = getState().user.user;\n\n    let like = {\n      user_name: user_info.user_name,\n      post_id: post_id,\n      user_id: user_info.uid,\n      insert_dt: moment().format(\"YYYY-MM-DD hh:mm:ss\"),\n    };\n\n    likeDB.add(like).then((doc) => {\n      const postDB = firestore.collection(\"post\");\n\n      const post = getState().post.list.find((l) => l.id === post_id);\n\n      const increment = firebase.firestore.FieldValue.increment(1);\n\n      like = { ...like, id: doc.id };\n\n      postDB\n        .doc(post_id)\n        .update({ like_cnt: increment })\n        .then((_post) => {\n          dispatch(addLike(post_id, user_info.uid));\n\n          if (post) {\n            dispatch(\n              postActions.updatePost(post_id, {\n                like_cnt: parseInt(post.like_cnt) + 1,\n              })\n            );\n          }\n        });\n    });\n  };\n};\n\nconst cancelLikeFB = (post_id) => {\n  return function (dispatch, getState, { history }) {\n    const likeDB = firestore.collection(\"like\");\n    const user_info = getState().user.user;\n\n    likeDB\n      .where(\"post_id\", \"==\", post_id)\n      .where(\"user_id\", \"==\", user_info.uid)\n      .get()\n      .then((docs) => {\n        let id = \"\";\n        docs.forEach((doc) => (id = doc.id));\n        likeDB\n          .doc(id)\n          .delete()\n          .then(() => {\n            const postDB = firestore.collection(\"post\");\n\n            const post = getState().post.list.find((l) => l.id === post_id);\n\n            const decrement = firebase.firestore.FieldValue.increment(-1);\n\n            postDB\n              .doc(post_id)\n              .update({ like_cnt: decrement })\n              .then((_post) => {\n                dispatch(cancelLike(post_id, user_info.uid));\n                if (post) {\n                  if (parseInt(post.like_cnt) === 0) {\n                    return;\n                  }\n                  dispatch(\n                    postActions.updatePost(post_id, {\n                      like_cnt: parseInt(post.like_cnt) - 1,\n                    })\n                  );\n                }\n              });\n          });\n      })\n      .catch((error) => {\n        console.log(\"좋아요를 취소할 포스트를 찾을수가 없어요ㅜㅜ\");\n      });\n  };\n};\n\nexport default handleActions(\n  {\n    [SET_LIKE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.list[action.payload.post_id] = action.payload.user_list;\n      }),\n    [ADD_LIKE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.list[action.payload.post_id].push(action.payload.user_id);\n      }),\n    [CANCEL_LIKE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.list[action.payload.post_id] = draft.list[\n          action.payload.post_id\n        ].filter((l) => l !== action.payload.user_id);\n      }),\n  },\n  initialState\n);\n\nconst actionCreators = {\n  getLikeFB,\n  addLikeFB,\n  cancelLikeFB,\n};\n\nexport { actionCreators };\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { createBrowserHistory } from \"history\";\nimport { connectRouter } from \"connected-react-router\";\n\nimport User from \"./modules/user\";\nimport Post from \"./modules/post\";\nimport Image from \"./modules/image\";\nimport Comment from \"./modules/comment\";\nimport like from \"./modules/like\";\n\nexport const history = createBrowserHistory();\n\nconst rootReducer = combineReducers({\n  user: User,\n  post: Post,\n  image: Image,\n  comment: Comment,\n  like: like,\n  router: connectRouter(history),\n});\n\nconst middlewares = [thunk.withExtraArgument({ history: history })];\n\n// 지금이 어느 환경인 지 알려줘요. (개발환경, 프로덕션(배포)환경 ...)\nconst env = process.env.NODE_ENV;\n\n// 개발환경에서는 로거라는 걸 하나만 더 써볼게요.\nif (env === \"development\") {\n  const { logger } = require(\"redux-logger\");\n  middlewares.push(logger);\n}\n\nconst composeEnhancers =\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n      })\n    : compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\n\nlet store = (initialStore) => createStore(rootReducer, enhancer);\n\nexport default store();\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Grid = (props) => {\n  const { is_flex, width, margin, padding, bg, children, center, _onClick, maxWidth, } = props;\n\n  const styles = {\n      is_flex: is_flex,\n      width: width,\n      margin: margin,\n      padding: padding,\n      bg: bg,\n      center: center,\n      maxWidth: maxWidth,\n      \n  };\n  return (\n    <React.Fragment>\n      <GridBox {...styles} onClick={_onClick}>{children}</GridBox>\n    </React.Fragment>\n  );\n};\n\nGrid.defaultProps = {\n  chidren: null,\n  is_flex: false,\n  width: \"100%\",\n  padding: false,\n  margin: false,\n  bg: false,\n  center: false,\n  maxWidth: false,\n  _onClick: () => {}\n};\n\nconst GridBox = styled.div`\n  width: ${(props) => props.width};\n  height: 100%;\n  box-sizing: border-box;\n  ${(props) => (props.padding ? `padding: ${props.padding};` : \"\")}\n  ${(props) => (props.margin ? `margin: ${props.margin};` : \"\")}\n  ${(props) => (props.bg ? `background-color: ${props.bg};` : \"\")}\n  ${(props) =>\n    props.is_flex\n      ? `display: flex; align-items: center; justify-content: space-between; `\n      : \"\"}\n  ${(props) => props.center? `text-align: center;`: \"\"}\n  ${(props) => props.maxWidth? `max-width: 1200px;`: \"\"}\n`;\n\nexport default Grid;\n","import styled from 'styled-components';\nimport React from \"react\";\n\nconst Image = (props) => {\n    const {shape, src, size} = props;\n\n    const styles = {\n        src: src,\n        size: size,\n    }\n\n    if(shape === \"circle\"){\n        return (\n            <ImageCircle {...styles}></ImageCircle>\n        )\n    }\n\n    if (shape === \"big_square\") {\n        return <BigSquareImage {...styles}></BigSquareImage>;\n      }\n\n    if(shape === \"rectangle\"){\n        return (\n            <AspectOutter>\n                <AspectInner {...styles}></AspectInner>\n            </AspectOutter>\n        )\n    }\n\n    return (\n        <React.Fragment>\n            <ImageDefault {...styles}></ImageDefault>\n        </React.Fragment>\n    )\n}\n\nImage.defaultProps = {\n  shape: \"circle\",\n  src: \"https://pds.joongang.co.kr/news/component/htmlphoto_mmdata/202111/07/762ce144-d666-4790-8609-c78416910e88.jpg\",\n  size: 36,\n};\n\nconst ImageDefault = styled.div`\n  --size: ${(props) => props.size}px;\n  width: var(--size);\n  height: var(--size);\n  background-image: url(\"${(props) => props.src}\");\n  background-size: cover;\n`;\n\nconst AspectOutter = styled.div`\n    width: 100%;\n    min-width: 250px;\n`;\n\nconst AspectInner = styled.div`\n    position: relative;\n    padding-top: 75%;\n    overflow: hidden;\n    background-image: url(\"${(props) => props.src}\");\n    background-size: cover;\n`;\n\nconst ImageCircle = styled.div`\n    --size: ${(props) => props.size}px;\n    width: var(--size);\n    height: var(--size);\n    border-radius: var(--size);\n\n    background-image: url(\"${(props) => props.src}\");\n    background-size: cover;\n    margin: 4px;\n`;\n\nconst BigSquareImage = styled.img`\n  width: 100%;\n  ${(props) => (props.half ? `flex-basis: 50%;` : \"\")}\n  min-width: 250px;\n  background-image: url(${(props) => props.src});\n  background-size: cover;\n  margin: 10px 0;\n  @media (max-width: 280px) {\n    min-width: 150px;\n  }\n  @media (max-width: 360px) {\n    min-width: 180px;\n  }\n`;\n\nexport default Image;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Text = (props) => {\n  const { bold, color, size, children, margin } = props;\n\n  const styles = {bold: bold, color: color, size: size, margin};\n  return (\n      <P {...styles}>\n          {children}\n      </P>\n  )\n};\n\nText.defaultProps = {\n  children: null,\n  bold: false,\n  color: \"#222831\",\n  size: \"14px\",\n  margin: false,\n};\n\nconst P = styled.p`\n  color: ${(props) => props.color};\n  font-size: ${(props) => props.size};\n  font-weight: ${(props) => (props.bold? \"600\" : \"400\")};\n  ${(props) => (props.margin? `margin: ${props.margin};` : '')}\n`;\n\nexport default Text;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Text, Grid } from \"./index\";\n\nconst Input = (props) => {\n  const {\n    label,\n    placeholder,\n    _onChange,\n    type,\n    multiLine,\n    value,\n    is_submit,\n    onSubmit,\n  } = props;\n\n  if (multiLine) {\n    return (\n      <Grid>\n        {label && <Text margin=\"0px\">{label}</Text>}\n        <ElTextarea\n          rows={10}\n          value={value}\n          placeholder={placeholder}\n          onChange={_onChange}\n        ></ElTextarea>\n      </Grid>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Grid>\n        {label && <Text margin=\"0px\">{label}</Text>}\n        {is_submit ? (\n          <ElInput\n            type={type}\n            placeholder={placeholder}\n            onChange={_onChange}\n            value={value}\n            onKeyPress={(e) => {\n              if(e.key === \"Enter\"){\n                onSubmit(e);\n              }\n            }}\n          />\n        ) : (\n          <ElInput type={type} placeholder={placeholder} onChange={_onChange} />\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nInput.defaultProps = {\n  multiLine: false,\n  label: false,\n  placeholder: \"텍스트를 입력해주세요.\",\n  type: \"text\",\n  value: \"\",\n  is_submit: false,\n  onSubmit: () => {},\n  _onChange: () => {},\n};\n\nconst ElTextarea = styled.textarea`\n  border: 1px solid #212121;\n  width: 100%;\n  padding: 12px 4px;\n  box-sizing: border-box;\n`;\n\nconst ElInput = styled.input`\n  border: 1px solid #212121;\n  width: 100%;\n  padding: 12px 4px;\n  box-sizing: border-box;\n`;\n\nexport default Input;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = (props) => {\n  const { text, _onClick, is_float, children, margin, width, padding,  } = props;\n\n  const styles = {\n    margin: margin,\n    width: width,\n    padding: padding,\n  };\n\n  if (is_float) {\n    return (\n      <React.Fragment>\n        <FloatButton onClick={_onClick}>{text? text : children}</FloatButton>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <ElButton {...styles} onClick={_onClick}>{text? text: children}</ElButton>\n    </React.Fragment>\n  );\n};\n\nButton.defaultProps = {\n  text: false,\n  children: null,\n  _onClick: () => {},\n  is_float: false,\n  margin: false,\n  width: \"100%\",\n  padding: \"12px 0px\",\n};\n\nconst ElButton = styled.button`\n  width: ${(props) => props.width};\n  background-color: #212121;\n  color: #ffffff;\n  padding: ${(props) => props.padding};\n  box-sizing: border-box;\n  border: none;\n  ${(props) => (props.margin ? `margin: ${props.margin};` : \"\")}\n`;\n\nconst FloatButton = styled.button`\n  width: 50px;\n  height: 50px;\n  background-color: #212121;\n  color: #ffffff;\n  box-sizing: border-box;\n  font-size: 36px;\n  font-weight: 800;\n  position: fixed;\n  bottom: 50px;\n  right: 16px;\n  text-align: center;\n  vertical-align: middle;\n  border: none;\n  border-radius: 50px;\n`;\n\nexport default Button;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Spinner = (props) => {\n  const { type, size, is_dim } = props;\n\n  return (\n    <React.Fragment>\n      <SpinnerWrap type={type} is_dim={is_dim}>\n        <SpinnerSvg size={size} />\n      </SpinnerWrap>\n    </React.Fragment>\n  );\n};\n\nSpinner.defaultProps = {\n  type: \"inline\", \n  is_dim: false,\n  size: 60,\n};\n\nconst SpinnerWrap = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px 0;\n  ${(props) =>\n    props.type === \"page\"\n      ? `position: fixed;\n        height: 95vh;\n        top: 0;\n        left: 0;\n        padding: 0;\n        zIndex: 9999;`\n      : ``}\n  ${(props) =>\n    props.is_dim\n      ? `\n     background: rgba(0,0,0,0.4); \n     height: 100vh;\n  `\n      : ``}\n`;\n\nconst SpinnerSvg = styled.div`\n  --size: ${(props) => props.size}px;\n  width: var(--size);\n  height: var(--size);\n  background-image: url(http://react.rocks/images/converted/react-spinner.jpg);\n  background-size: var(--size);\n`;\n\nexport default Spinner;\n","import React, { useState } from \"react\";\nimport { Text, Grid, Button } from \"../elements\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\n\nimport { apiKey } from \"../shared/firebase\";\nimport { history } from \"../redux/configureStore\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { actionCreators as likeActions } from \"../redux/modules/like\";\n\nconst LikeButton = (props) => {\n  const dispatch = useDispatch();\n  const like_list = useSelector((state) => state.like.list);\n  const user_info = useSelector((state) => state.user.user);\n\n  const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`;\n  const is_session = sessionStorage.getItem(_session_key) ? true : false;\n\n  const { post_id } = props;\n\n  React.useEffect(() => {\n    if (like_list[post_id]?.includes(user_info?.uid)) {\n      setToggle(true);\n    } else {\n      setToggle(false);\n    }\n  },[]);\n\n  const [toggle, setToggle] = useState(false);\n  const updateLike = () => {\n    if (!user_info || !is_session) {\n      return history.replace(\"/caution\");\n    } else if (!like_list[post_id]?.includes(user_info.uid)) {\n      dispatch(likeActions.addLikeFB(post_id));\n    } else if (like_list[post_id]?.includes(user_info.uid)) {\n      dispatch(likeActions.cancelLikeFB(post_id));\n    }\n  };\n  return (\n    <>\n      <Text _onClick={updateLike}>\n        <FavoriteIcon\n          style={\n            toggle ? { color: \"pink\", ...styles } : { color: \"grey\", ...styles }\n          }\n        />\n      </Text>\n    </>\n  );\n};\n\nconst styles = {\n  padding: \"10px\",\n};\n\nexport default LikeButton;\n","import React from \"react\";\nimport { Grid, Image, Text, Button } from \"../elements\";\n\nimport {history} from \"../redux/configureStore\";\nimport { useDispatch,useSelector } from \"react-redux\";\nimport { actionCreators as likeActions } from \"../redux/modules/like\";\nimport LikeButton from \"./LikeButton\";\n\n const Post = (props) => {\n  \n  const dispatch = useDispatch();\n  const list = useSelector((state) => state.like.list);\n  \n  const {\n    user_info,\n    image_url,\n    contents,\n    like_cnt,\n    insert_dt,\n    id,\n    layout,\n    comment_cnt,\n  } = props;\n\n  React.useEffect(() => {\n    dispatch(likeActions.getLikeFB(id));\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid>\n        <Grid is_flex padding=\"16px\">\n          <Grid is_flex width=\"auto\">\n            <Image shape=\"circle\" src={props.src} />\n            <Text bold>{props.user_info.user_name}</Text>\n          </Grid>\n          <Grid is_flex width=\"auto\">\n            <Text>{props.insert_dt}</Text>\n            {props.is_me && (\n              <Button width=\"auto\" margin=\"4px\" padding=\"4px\" _onClick={(event) => {\n                event.stopPropagation()\n                history.push(`/write/${props.id}`);                \n              }}>\n                수정\n              </Button>\n            )}\n          </Grid>\n        </Grid>\n        </Grid>\n\n        {layout === \"right\" && (\n        <Grid>\n          <Grid\n            is_flex\n            _onClick={() => {\n              history.push(`/post/${id}`);\n            }}\n          >\n            <Text margin=\"10px\" width=\"80%\" center size=\"15px\">\n              {contents}\n            </Text>\n            <Image half shape=\"big_square\" src={image_url} />\n          </Grid>\n          <Grid is_flex padding=\"5px\">\n            <Grid is_flex padding=\"5px\" width=\"150px\">\n              <Text >좋아요 {like_cnt}개</Text>\n              <Text>댓글 {comment_cnt}개</Text>\n            </Grid>\n            <LikeButton post_id={id}></LikeButton>\n          </Grid>\n        </Grid>\n      )}\n      {layout === \"left\" && (\n        <Grid>\n          <Grid\n            is_flex\n            _onClick={() => {\n              history.push(`/post/${id}`);\n            }}\n          >\n            <Image half shape=\"big_square\" src={image_url} />\n            <Text margin=\"10px\" width=\"80%\" center>\n              {contents}\n            </Text>\n          </Grid>\n          <Grid is_flex padding=\"5px\">\n            <Grid is_flex padding=\"5px\" width=\"150px\">\n              <Text>좋아요 {like_cnt}개</Text>\n              <Text>댓글 {comment_cnt}개</Text>\n            </Grid>\n            <LikeButton post_id={id}></LikeButton>\n          </Grid>\n        </Grid>\n      )}\n      {layout === \"bottom\" && (\n        <Grid>\n          <Grid\n            _onClick={() => {\n              history.push(`/post/${id}`);\n            }}\n          >\n            <Text margin=\"10px\">{contents}</Text>\n            <Image shape=\"rectangle\" src={image_url} />\n          </Grid>\n          <Grid is_flex padding=\"5px\">\n            <Grid is_flex padding=\"5px\" width=\"150px\">\n              <Text>좋아요 {like_cnt}개</Text>\n              <Text>댓글 {comment_cnt}개</Text>\n            </Grid>\n            <LikeButton post_id={id}></LikeButton>\n          </Grid>\n        </Grid>\n      )}\n   </React.Fragment>\n  );\n};\n\nPost.defaultProps = {\n  user_info: {\n    user_name: \"Jay\",\n    user_profile: \"https://pds.joongang.co.kr/news/component/htmlphoto_mmdata/202111/07/762ce144-d666-4790-8609-c78416910e88.jpg\",\n  },\n  image_url: \"https://pds.joongang.co.kr/news/component/htmlphoto_mmdata/202111/07/762ce144-d666-4790-8609-c78416910e88.jpg\",\n  contents: \"귀요미 ㅎㅎ\",\n  comment_cnt: 10,\n  like_cnt: 0,\n  insert_dt: \"2021-02-27 10:00:00\",\n  is_me: false,\n};\n\nexport default Post;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport {Spinner} from \"../elements\";\n\nconst InfinityScroll = (props) => {\n\n    const {children, callNext, is_next, loading} = props;\n\n    const _handleScroll = _.throttle(() => {\n\n        if(loading){\n            return;\n        }\n\n        const {innerHeight} = window;\n        const {scrollHeight} = document.body;\n\n        const scrollTop = (document.documentElement && document.documentElement.scrollTop) || document.body.scrollTop;\n        \n        if(scrollHeight - innerHeight - scrollTop < 200) {\n            callNext();\n        }\n    }, 300);\n\n    const handleScroll = React.useCallback(_handleScroll, [loading]);\n\n    React.useEffect(() => {\n        \n        if(loading){\n            return;\n        }\n\n        if(is_next){\n            window.addEventListener(\"scroll\", handleScroll);\n        }else{\n            window.removeEventListener(\"scroll\", handleScroll);\n        }\n        \n\n        return () => window.removeEventListener(\"scroll\", handleScroll);\n    }, [is_next, loading]);\n\n    return (\n        <React.Fragment>\n            {props.children}\n            {is_next && (<Spinner/>)}\n        </React.Fragment>\n    )\n}\n\nInfinityScroll.defaultProps = {\n    children: null,\n    callNext: () => {},\n    is_next: false,\n    loading: false,\n}\n\nexport default InfinityScroll;","// PostList.js\nimport React from \"react\";\nimport {useSelector, useDispatch} from \"react-redux\";\n\nimport Post from \"../components/Post\";\nimport {actionCreators as postActions} from \"../redux/modules/post\";\nimport InfinityScroll from \"../shared/InfinityScroll\";\nimport {Grid} from \"../elements\";\n\n\nconst PostList = (props) => {\n    const dispatch = useDispatch();\n    const post_list = useSelector((state) => state.post.list);\n    const user_info = useSelector((state) => state.user.user);\n    const is_loading = useSelector((state) => state.post.is_loading);\n    const paging = useSelector((state) => state.post.paging);\n\n    const {history} = props;\n    \n    React.useEffect(() => {\n\n        if(post_list.length < 2){\n             dispatch(postActions.getPostFB());\n        }\n       \n    }, []);\n\n    return (\n      <React.Fragment>\n        <Grid bg={\"#EFF6FF\"} padding=\"20px 0px\">\n          {/* <Post/> */}\n          <InfinityScroll\n            callNext={() => {\n              dispatch(postActions.getPostFB(paging.next));\n            }}\n            is_next={paging.next ? true : false}\n            loading={is_loading}\n          >\n            {post_list.map((p, idx) => {\n              if (p.user_info.user_id === user_info?.uid) {\n                return (\n                  <Grid\n                    bg=\"#ffffff\"\n                    margin=\"8px 0px\"\n                    key={p.id}\n                    _onClick={() => {\n                      history.push(`/post/${p.id}`);\n                    }}\n                  >\n                    <Post key={p.id} {...p} is_me />\n                  </Grid>\n                );\n              } else {\n                return (\n                  <Grid\n                    key={p.id}\n                    bg=\"#ffffff\"\n                    _onClick={() => {\n                      history.push(`/post/${p.id}`);\n                    }}\n                  >\n                    <Post {...p} />\n                  </Grid>\n                );\n              }\n            })}\n          </InfinityScroll>\n        </Grid>\n      </React.Fragment>\n    );\n}\n\nexport default PostList;\n\n","export const emailCheck = (email) => {\n    let _reg = /^[0-9a-zA-Z]([-_.0-9a-zA-Z])*@[0-9a-zA-Z]([-_.0-9a-zA-z])*.([a-zA-Z])*/;\n\n    return _reg.test(email);\n}","import React from \"react\";\nimport { Text, Input, Grid, Button } from \"../elements\";\nimport { getCookie, setCookie, deleteCookie } from \"../shared/Cookie\";\n\nimport { useDispatch } from \"react-redux\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\nimport { emailCheck } from \"../shared/common\";\n\nconst Login = (props) => {\n  const dispatch = useDispatch();\n\n  const [id, setId] = React.useState(\"\");\n  const [pwd, setPwd] = React.useState(\"\");\n\n  const login = () => {\n\n    console.log(id);\n\n    if(id === \"\" || pwd === \"\"){\n      window.alert(\"아이디 혹은 비밀번호를 입력해주세요!\");\n      return;\n    }\n\n    if(!emailCheck(id)){\n      window.alert(\"이메일 형식이 맞지 않습니다!\");\n      return;\n    }\n\n    dispatch(userActions.loginFB(id, pwd));\n  };\n\n  return (\n    <React.Fragment>\n      <Grid padding=\"16px\">\n        <Text size=\"32px\" bold>\n          로그인\n        </Text>\n\n        <Grid padding=\"16px 0px\">\n          <Input\n            label=\"아이디\"\n            placeholder=\"아이디를 입력해주세요.\"\n            _onChange={(e) => {\n              setId(e.target.value);\n            }}\n          />\n        </Grid>\n\n        <Grid padding=\"16px 0px\">\n          <Input\n            label=\"패스워드\"\n            placeholder=\"패스워드 입력해주세요.\"\n            type=\"password\"\n            _onChange={(e) => {\n              setPwd(e.target.value);\n            }}\n            value={pwd}\n            is_submit\n            onSubmit={login}\n          />\n        </Grid>\n\n        <Button\n          text=\"로그인하기\"\n          _onClick={() => {\n            console.log(\"로그인 했어!\");\n            login();\n          }}\n        ></Button>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { Grid, Text, Input, Button } from \"../elements\";\n\nimport { useDispatch } from \"react-redux\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\nimport { emailCheck } from \"../shared/common\";\n\nconst Signup = (props) => {\n  const dispatch = useDispatch();\n\n  const [id, setId] = React.useState(\"\");\n  const [pwd, setPwd] = React.useState(\"\");\n  const [pwd_check, setPwdCheck] = React.useState(\"\");\n  const [user_name, setUserName] = React.useState(\"\");\n\n  const signup = () => {\n    if (id === \"\" || pwd === \"\" || user_name === \"\") {\n      window.alert(\"아이디, 패스워드, 닉네임을 모두 입력해주세요!\");\n      return;\n    }\n\n    if(!emailCheck(id)){\n      window.alert('이메일 형식이 맞지 않습니다!');\n      return;\n    }\n    \n    if (pwd !== pwd_check) {\n      window.alert(\"패스워드와 패스워드 확인이 일치하지 않습니다!\");\n      return;\n    }\n\n    if (pwd.length < 5) {\n      window.alert(\"패스워드는 최소 6자리 이상입니다!\")\n    }\n\n    dispatch(userActions.signupFB(id, pwd, user_name));\n  };\n  return (\n    <React.Fragment>\n      <Grid padding=\"16px\">\n        <Text size=\"32px\" bold>\n          회원가입\n        </Text>\n\n        <Grid padding=\"16px 0px\">\n          <Input\n            label=\"아이디\"\n            placeholder=\"아이디를 입력해주세요.\"\n            _onChange={(e) => {\n              setId(e.target.value);\n            }}\n          />\n        </Grid>\n\n        <Grid padding=\"16px 0px\">\n          <Input\n            label=\"닉네임\"\n            placeholder=\"닉네임을 입력해주세요.\"\n            _onChange={(e) => {\n              setUserName(e.target.value);\n            }}\n          />\n        </Grid>\n\n        <Grid padding=\"16px 0px\">\n          <Input\n            type=\"password\"\n            label=\"비밀번호\"\n            placeholder=\"비밀번호를 입력해주세요.\"\n            _onChange={(e) => {\n              setPwd(e.target.value);\n            }}\n          />\n        </Grid>\n\n        <Grid padding=\"16px 0px\">\n          <Input\n            type=\"password\"\n            label=\"비밀번호 확인\"\n            placeholder=\"비밀번호를 다시 입력해주세요.\"\n            _onChange={(e) => {\n              setPwdCheck(e.target.value);\n            }}\n          />\n        </Grid>\n\n        <Button text=\"회원가입하기\" _onClick={signup}></Button>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nSignup.defaultProps = {};\n\nexport default Signup;\n","import React from \"react\";\n\nimport {Button} from \"../elements\";\nimport {storage} from \"./firebase\";\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {actionCreators as imageActions} from \"../redux/modules/image\";\n\nconst Upload = (props) => {\n    const dispatch = useDispatch();\n    const is_uploading = useSelector(state => state.image.uploading);\n    const fileInput = React.useRef();\n\n    const selectFile = (e) => {\n        console.log(e);\n        console.log(e.target);\n        console.log(e.target.files[0]);\n\n        console.log(fileInput.current.files[0]);\n\n        const reader = new FileReader();\n        const file = fileInput.current.files[0];\n\n        reader.readAsDataURL(file);\n\n        reader.onloadend = () => {\n            console.log(reader.result);\n            dispatch(imageActions.setPreview(reader.result));\n        }\n\n    }\n\n    const uploadFB = () => {\n        let image = fileInput.current.files[0];\n        dispatch(imageActions.uploadImageFB(image));\n    }\n\n    return (\n        <React.Fragment>\n            <input type=\"file\" onChange={selectFile} ref={fileInput} disabled={is_uploading}/>\n            <Button _onClick={uploadFB}>업로드하기</Button>\n        </React.Fragment>\n    )\n}\n\nexport default Upload;","import React, {useState} from \"react\";\nimport { Grid, Text, Button, Image, Input } from \"../elements\";\nimport Upload from \"../shared/Upload\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport { actionCreators as imageActions } from \"../redux/modules/image\";\n\nconst PostWrite = (props) => {\n  const dispatch = useDispatch();\n  const is_login = useSelector((state) => state.user.is_login);\n  const preview = useSelector((state) => state.image.preview);\n  const post_list = useSelector((state) => state.post.list);\n  \n\n  const post_id = props.match.params.id;\n  const is_edit = post_id ? true : false;\n\n  const _post = is_edit ? post_list.find((p) => p.id === post_id) : null;\n  const [layout, setLayout] = useState(_post ? _post.layout : \"bottom\");\n  const [input, setInput] = useState(_post ? _post.contents : \"\");\n\n\n  const { history } = props;\n\n  const [contents, setContents] = useState(_post ? _post.contents : \"\");\n\n  React.useEffect(() => {\n    if (is_edit && !_post) {\n      console.log(\"포스트 정보가 없어요!\");\n      history.goBack();\n\n      return;\n    }\n\n    if (is_edit) {\n      dispatch(imageActions.setPreview(_post.image_url));\n    }\n  }, []);\n\n  const addPost = () => {\n    dispatch(postActions.addPostFB(input, layout));\n  };\n\n  const editPost = () => {\n    dispatch(postActions.editPostFB(post_id, {contents: input, layout}));\n  }\n\n  const is_checked = (e) => {\n    setLayout(e.target.value);\n    // if (e.target.checked) {\n    //   setLayout(e.target.value);\n    // }\n    \n  };\n\n  if (!is_login) {\n    return (\n      <Grid margin=\"100px 0px\" padding=\"16px\" center>\n        <Text size=\"32px\" bold>\n          잠시만요!\n        </Text>\n        <Text size=\"16px\">로그인 후에만 글을 쓰실수 있어요!😉 </Text>\n        <Button\n          _onClick={() => {\n            history.replace(\"/\");\n          }}\n        >\n          로그인 하러가기\n        </Button>\n      </Grid>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Grid padding=\"16px\">\n        <Text margin=\"0px\" size=\"36px\" bold>\n          {is_edit ? \"게시글 수정\" : \"게시글 작성\"}\n        </Text>\n        <Upload />\n        <Text size=\"25px\" bold margin=\"25px 0px\">\n          세개의 레이아웃중 한가지를 선택해주세요!\n        </Text>\n      </Grid>\n\n      <Grid padding=\"16px\">\n        <input\n          type=\"radio\"\n          name=\"layout\"\n          value=\"right\"\n          id=\"right\"\n          onClick={is_checked}\n        />\n        <label htmlFor=\"right\">\n          <strong\n            style={\n              layout === \"right\" ? { color: \"lightgreen\", margin: \"10px\" } : null\n            }\n          >\n            오른쪽에 이미지, 왼쪽에 게시물 내용\n          </strong>\n        </label>\n      </Grid>\n      <Grid is_flex>\n        <Text width=\"80%\" margin=\"10px\" center>\n          {input}\n        </Text>\n        <Image\n          half\n          shape=\"big_square\"\n          src={\n            preview\n              ? preview\n              : \"http://via.placeholder.com/400x300\"\n          }\n        />\n      </Grid>\n      <Grid padding=\"16px\">\n        <input\n          type=\"radio\"\n          name=\"layout\"\n          value=\"left\"\n          id=\"left\"\n          onClick={is_checked}\n        />\n        <label htmlFor=\"left\">\n          <strong\n            style={\n              layout === \"left\" ? { color: \"lightgreen\", margin: \"10px\" } : null\n            }\n          >\n            왼쪽에 이미지, 오른쪽에 게시물 내용\n          </strong>\n        </label>\n      </Grid>\n      <Grid is_flex>\n        <Image\n          half\n          shape=\"big_square\"\n          src={\n            preview\n              ? preview\n              : \"http://via.placeholder.com/400x300\"\n          }\n        />\n        <Text width=\"80%\" margin=\"10px\" center>\n          {input}\n        </Text>\n      </Grid>\n      <Grid padding=\"16px\">\n        <input\n          type=\"radio\"\n          name=\"layout\"\n          value=\"bottom\"\n          id=\"bottom\"\n          onClick={is_checked}\n          style={{ color: \"lightgreen\" }}\n        />\n        <label htmlFor=\"bottom\">\n          {\" \"}\n          <strong\n            style={\n              layout === \"bottom\" ? { color: \"lightgreen\", margin: \"10px\" } : null\n            }\n          >\n            하단에 이미지, 상단에 게시물 내용\n          </strong>\n        </label>\n      </Grid>\n      <Grid>\n        <Text margin=\"10px\">{input}</Text>\n        <Image\n          shape=\"big_square\"\n          src={\n            preview\n              ? preview\n              : \"http://via.placeholder.com/400x300\"\n          }\n        />\n      </Grid>\n\n      <Grid padding=\"16px\">\n        <Input\n          textarea\n          value={input}\n          onChange={is_checked}\n          label=\"게시글 내용\"\n          placeholder=\"게시글 작성\"\n          multiLine\n          _onChange={(e) => {\n            setInput(e.target.value);   \n          }}\n          \n        />\n      {is_edit ? (\n          <Button\n            _onClick={editPost}\n            _disabled={!preview || input === \"\" ? true : false}\n          >\n            게시글 수정\n          </Button>\n        ) : (\n          <Button\n            _onClick={addPost}\n            _disabled={!preview || input === \"\" ? true : false}\n          >\n            게시글 작성\n          </Button>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default PostWrite;\n","import React from \"react\";\nimport {Grid, Image, Text} from \"../elements\";\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {actionCreators as commentActions} from \"../redux/modules/comment\";\n\nconst CommentList = (props) => {\n  const dispatch = useDispatch();\n  const comment_list = useSelector(state => state.comment.list);\n\n  const {post_id} = props;\n\n  React.useEffect(() => {\n\n    if(!comment_list[post_id]){\n      dispatch(commentActions.getCommentFB(post_id));\n    }\n  }, []);\n  \n  if(!comment_list[post_id] || !post_id){\n    return null;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid padding=\"16px\">\n        {comment_list[post_id].map(c => {\n          return <CommentItem key={c.id} {...c}/>;\n        })}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nCommentList.defaultProps = {\n  post_id: null,\n}\n\nexport default CommentList;\n\n\nconst CommentItem = (props) => {\n\n    const {user_profile, user_name, user_id, post_id, contents, insert_dt} = props;\n    return (\n        <Grid is_flex>\n            <Grid is_flex width=\"auto\">\n                <Image shape=\"circle\"/>\n                <Text bold>{user_name}</Text>\n            </Grid>\n            <Grid is_flex margin=\"0px 4px\">\n                <Text margin=\"0px\">{contents}</Text>\n                <Text margin=\"0px\">{insert_dt}</Text>\n            </Grid>\n        </Grid>\n    )\n}\n\nCommentItem.defaultProps = {\n    user_profile: \"\",\n    user_name: \"Jay\",\n    user_id: \"\",\n    post_id: 1,\n    contents: \"귀요미 둘\",\n    insert_dt: '2021-01-01 19:00:00'\n}","import React from \"react\";\nimport { Grid, Input, Button } from \"../elements\";\n\nimport { actionCreators as commentActions } from \"../redux/modules/comment\";\nimport { useDispatch} from \"react-redux\";\n\nconst CommentWrite = (props) => {\n  const dispatch = useDispatch();\n  const [comment_text, setCommentText] = React.useState();\n\n  const {post_id} = props;\n\n  const onChange = (e) => {\n    setCommentText(e.target.value);\n  };\n\n  const write = () => {\n    dispatch(commentActions.addCommentFB(post_id, comment_text));\n    setCommentText(\"\");\n  };\n\n  return (\n    <React.Fragment>\n      <Grid padding=\"16px\" is_flex>\n        <Input\n          placeholder=\"댓글 내용을 입력해주세요 :)\"\n          _onChange={onChange}\n          value={comment_text}\n          onSubmit={write}\n          is_submit\n        />\n        <Button width=\"50px\" margin=\"0px 2px 0px 2px\" _onClick={write}>\n          작성\n        </Button>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default CommentWrite;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { apiKey } from \"./firebase\";\n\nconst Permit = (props) => {\n  const is_login = useSelector((state) => state.user.is_login);\n\n  const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`;\n\n  const is_session = sessionStorage.getItem(_session_key) ? true : false;\n\n  if (is_session && is_login) {\n    return <React.Fragment>{props.children}</React.Fragment>;\n  }\n  \n  return null;\n};\n\nexport default Permit;\n","import React from \"react\";\nimport Post from \"../components/Post\";\nimport CommentList from \"../components/CommentList\";\nimport CommentWrite from \"../components/CommentWrite\";\n\nimport Permit from \"../shared/Permit\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { actionCreators as postActions } from \"../redux/modules/post\";\n\nimport { Button } from \"../elements\";\n\nimport { history } from \"../redux/configureStore\";\n\nconst PostDetail = (props) => {\n  const dispatch = useDispatch();\n  const id = props.match.params.id;\n\n  const user_info = useSelector((state) => state.user.user);\n\n  const post_list = useSelector((store) => store.post.list);\n\n  const post_idx = post_list.findIndex((p) => p.id === id);\n  const post = post_list[post_idx];\n\n  React.useEffect(() => {\n    if (post) {\n      return;\n    }\n\n    dispatch(postActions.getOnePostFB(id));\n  }, []);\n\n  const deletePost = () => {\n    window.alert(\"삭제가 완료되었습니다.\")\n    dispatch(postActions.deletePostFB(id));\n  }\n\n  return (\n    <React.Fragment>\n      {post && (\n        <>\n          <Post {...post} is_me={post.user_info.user_id === user_info?.uid} />\n          {post.user_info.user_id === user_info?.uid ? (\n            <Button _onClick={deletePost}>삭제하기</Button>\n          ) : null}\n        </>     \n      )}\n      <Permit>\n        <CommentWrite post_id={id} />\n      </Permit>\n      <CommentList post_id={id} />\n      </React.Fragment>\n  );\n};\n\nexport default PostDetail;\n","import React from \"react\";\nimport _ from \"lodash\";\n\nconst Search = () => {\n\n    const [text, setText] = React.useState(\"\");\n\n     const debounce = _.debounce((e) => {\n       console.log(\"debounce ::: \", e.target.value);\n     }, 1000);\n\n     const throttle = _.throttle((e) => {\n       console.log(\"throttle ::: \", e.target.value);\n     }, 1000);\n     \n    const keyPress = React.useCallback(debounce, []);\n\n    const onChange = (e) => {\n        setText(e.target.value);\n        keyPress(e);\n    }\n\n   \n\n    return (\n      <div>\n        <input type=\"text\" onChange={onChange} value={text}/>\n      </div>\n    );\n}\n\nexport default Search;","import React from \"react\";\nimport { Grid, Image, Text } from \"../elements\";\n\nimport { history } from \"../redux/configureStore\";\n\nconst Card = (props) => {\n  const { image_url, user_name, post_id } = props;\n\n  return (\n    <Grid\n      _onClick={() => {\n        history.push(`/post/${post_id}`);\n      }}\n      padding=\"16px\"\n      is_flex\n      bg=\"#ffffff\"\n      margin=\"8px 0px\"\n    >\n      <Grid width=\"auto\" margin=\"0px 8px 0px 0px\">\n        <Image size={85} shape=\"square\" src={image_url} />\n      </Grid>\n      <Grid>\n        <Text>\n          <b>{user_name}</b>님이 게시글에 댓글을 남겼습니다 :)!\n        </Text>\n      </Grid>\n    </Grid>\n  );\n};\n\nCard.defaultProps = {\n  image_url: \"\",\n  user_name: \"\",\n  post_id: null,\n};\n\nexport default Card;\n","import React from \"react\";\nimport { Grid, Text, Image } from \"../elements\";\nimport Card from \"../components/Card\";\n\nimport { realtime } from \"../shared/firebase\";\nimport { useSelector } from \"react-redux\";\n\nconst Notification = (props) => {\n  const user = useSelector(state => state.user.user);\n  const [noti, setNoti] = React.useState([]);\n  \n  React.useEffect(() => {\n    if(!user){\n      return;\n    }\n\n    const notiDB = realtime.ref(`noti/${user.uid}/list`);\n\n    const _noti = notiDB.orderByChild(\"insert_dt\");\n\n    _noti.once(\"value\", snapshot => {\n      if(snapshot.exists()){\n        let _data = snapshot.val();\n\n        let _noti_list = Object.keys(_data).reverse().map(s => {\n          return _data[s];\n        })\n\n        console.log(_noti_list);\n        setNoti(_noti_list);\n      }\n    })\n\n\n  }, [user]);\n  \n  return (\n    <React.Fragment>\n      <Grid padding=\"16px\" bg=\"#EFF6FF\">\n        {noti.map((n, idx) => {\n          return <Card key={`noti_${idx}`} {...n} />;\n        })}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default Notification;\n","import React from \"react\";\nimport { Badge } from \"@material-ui/core\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\n\nimport { realtime } from \"../shared/firebase\";\nimport { useSelector } from \"react-redux\";\n\nconst NotiBadge = (props) => {\n  const [is_read, setIsRead] = React.useState(true);\n  const user_id = useSelector((state) => state.user.user.uid);\n  const notiCheck = () => {\n    const notiDB = realtime.ref(`noti/${user_id}`);\n    notiDB.update({read: true});\n    props._onClick();\n  };\n\n  React.useEffect(() => {\n    const notiDB = realtime.ref(`noti/${user_id}`);\n\n    notiDB.on(\"value\", (snapshot) => {\n      console.log(snapshot.val());\n\n      setIsRead(snapshot.val().read);\n    });\n\n    return () => notiDB.off();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Badge\n        color=\"secondary\"\n        variant=\"dot\"\n        invisible={is_read}\n        onClick={notiCheck}\n      >\n        <NotificationsIcon />\n      </Badge>\n    </React.Fragment>\n  );\n};\n\nNotiBadge.defaultProps = {\n  _onClick: () => {},\n};\n\nexport default NotiBadge;\n","import React from \"react\";\nimport { Grid, Text, Button } from \"../elements\";\nimport { getCookie, deleteCookie } from \"../shared/Cookie\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\n\nimport { history } from \"../redux/configureStore\";\nimport { apiKey } from \"../shared/firebase\";\n\nimport NotiBadge from \"./NotiBadge\";\n\nconst Header = (props) => {\n  const dispatch = useDispatch();\n  const is_login = useSelector((state) => state.user.is_login);\n\n  const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`;\n\n  const is_session = sessionStorage.getItem(_session_key)? true : false;\n  \n  console.log(is_session);\n\n  if (is_login && is_session) {\n    return (\n      <React.Fragment>\n        <Grid is_flex padding=\"4px 16px\">\n          <Grid>\n            <Text margin=\"0px\" size=\"24px\" bold>\n              동물의왕국\n            </Text>\n          </Grid>\n\n          <Grid is_flex>\n            <Button text=\"내정보\"></Button>\n            \n            <NotiBadge _onClick={() => {\n              history.push(\"/noti\");\n            }}\n            />\n            <Button\n              text=\"로그아웃\"\n              _onClick={() => {\n                dispatch(userActions.logoutFB());\n              }}\n            ></Button>\n          </Grid>\n        </Grid>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Grid is_flex padding=\"4px 16px\">\n        <Grid>\n          <Text margin=\"0px\" size=\"24px\" bold>\n            동물의왕국\n          </Text>\n        </Grid>\n\n        <Grid is_flex>\n          <Button\n            text=\"로그인\"\n            _onClick={() => {\n              history.push(\"/login\");\n            }}\n          ></Button>\n          <Button\n            text=\"회원가입\"\n            _onClick={() => {\n              history.push(\"/signup\");\n            }}\n          ></Button>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nHeader.defaultProps = {};\n\nexport default Header;\n","import React from \"react\";\nimport { Grid, Text, Button } from \"../elements\";\n\nimport { history } from \"../redux/configureStore\";\n\nconst Caution = (props) => {\n  return (\n    <Grid margin=\"100px 0px\" padding=\"16px\" center>\n      <Text size=\"32px\" bold>\n        잠시만요~!\n      </Text>\n      <Text size=\"16px\">로그인 후에만 이용 할 수 있어요!</Text>\n      <Button\n        _onClick={() => {\n          history.replace(\"/login\");\n        }}\n      >\n        로그인 하러 가기!\n      </Button>\n    </Grid>\n  );\n};\n\nexport default Caution;","import \"./App.css\";\nimport React from \"react\";\n\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { history } from \"../redux/configureStore\";\n\nimport PostList from \"../pages/PostList\";\nimport Login from \"../pages/Login\";\nimport Signup from \"../pages/Signup\";\nimport PostWrite from \"../pages/PostWrite\";\nimport PostDetail from \"../pages/PostDetail\";\nimport Search from \"./Search\";\nimport Notification from \"../pages/Notification\";\n\nimport Header from \"../components/Header\";\nimport { Grid, Button } from \"../elements\";\nimport Permit from \"./Permit\";\n\nimport { useDispatch } from \"react-redux\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\n\nimport { apiKey } from \"./firebase\";\nimport Caution from \"../pages/Caution\"\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`;\n  const is_session = sessionStorage.getItem(_session_key) ? true : false;\n\n  React.useEffect(() => {\n    if (is_session) {\n      dispatch(userActions.loginCheckFB());\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid maxWidth margin=\"auto\">\n        <Header></Header>\n        <ConnectedRouter history={history}>\n          <Route path=\"/\" exact component={PostList} />\n          <Route path=\"/login\" exact component={Login} />\n          <Route path=\"/signup\" exact component={Signup} />\n          <Route path=\"/write\" exact component={PostWrite} />\n          <Route path=\"/write/:id\" exact component={PostWrite} />\n          <Route path=\"/post/:id\" exact component={PostDetail} />\n          <Route path=\"/search\" exact component={Search} />\n          <Route path=\"/noti\" exact component={Notification} />\n          <Route path=\"/caution\" exact component={Caution} />\n        </ConnectedRouter>\n      </Grid>\n      <Permit>\n        <Button\n          is_float\n          text=\"+\"\n          _onClick={() => {\n            history.push(\"/write\");\n          }}\n        ></Button>\n      </Permit>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './shared/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\n\nimport store from \"./redux/configureStore\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}